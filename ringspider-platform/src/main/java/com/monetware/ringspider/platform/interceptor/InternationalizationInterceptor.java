package com.monetware.ringspider.platform.interceptor;import java.util.Locale;import java.util.Map;import java.util.Set;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.MessageSource;import org.springframework.context.i18n.LocaleContextHolder;import org.springframework.web.servlet.ModelAndView;import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;import com.monetware.ringspider.commons.property.InternationalizationProperties;/** * 国际化设置拦截器 *  * @author Ray *  */public class InternationalizationInterceptor extends HandlerInterceptorAdapter {		@Autowired	private MessageSource messageSource;		@Autowired	private InternationalizationProperties i18nProperties;		private final String MODEL_KEY_PREFIX = "i18n_";		@Override	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,			ModelAndView modelAndView) throws Exception {				String servletPath = request.getServletPath();		if(StringUtils.isBlank(servletPath) ||				servletPath.startsWith("/resources") ||				servletPath.startsWith("/uploaded") || 				servletPath.startsWith("/record")) {			return;		}				Locale locale = LocaleContextHolder.getLocale();		if (modelAndView != null && !modelAndView.getViewName().startsWith("redirect")) {			Map<String, String> messages = i18nProperties.getMessages();			Set<String> keySet = messages.keySet();			for(String key : keySet) {				modelAndView.addObject(MODEL_KEY_PREFIX + key, messageSource.getMessage("i18n.messages["+key+"]", null, locale));			}		}		super.postHandle(request, response, handler, modelAndView);	}	}